problem:
  name: "heat_2D_1C_marching"
  a: 1
  b: 0.5
  alpha: 0.5
  beta: 10
  gamma: 0.7

model:
  type: FNN
  params:
    hidden_layers: [64, 64, 64, 64, 64, 64, 64, 64, 64]
  marching:
    steps: [0.0, 0.5, 1.0, 1.5, 2.0]
    epochs_per_iter: [50000, 100000, 150000, 200000]

model_target:
  _target_: multipinn.neural_network.${model.type}

regularization:
  type: Constant # Pointwise, Constant, Gradient, Normal, null
  params:
    # ignored_indexes: [0]
    lambdas: [1, 1, 1, 1]

regularization_target:
  _target_: multipinn.regularization.${regularization.type}Losses

generator:
  domain_points: 20_000
  bound_points: 2_000
  sampler: "pseudo"

trainer:
  num_epochs: 200_000
  grid_update: 1_000_000
  random_seed: 42
  calc_loss: "mean" # "mean", "legacy"

visualization:
  grid_plot_points: 20_000
  save_period: 2000
  save_mode: "png"

scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.9999

optimizer:
  _target_: torch.optim.Adam
  lr: 0.001

paths:
  save_dir: ${hydra:runtime.cwd}/examples/${problem.name}/artifacts/marching_${model.type}_${regularization.type}
